unit TornarPrestador;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants,
  System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.StdCtrls, Vcl.Imaging.pngimage,
  Vcl.ExtCtrls, conexao, Vcl.Imaging.jpeg;

type
  TForm4 = class(TForm)
    LabelMensagem: TLabel;
    EditHabilidades: TEdit;
    Image1: TImage;
    LabelPerguntaHabilidades: TLabel;
    EditRegiao: TEdit;
    LabelPerguntaRegiao: TLabel;
    GroupBox1: TGroupBox;
    Votlar_txt: TLabel;
    retorna_ao_menu: TImage;
    Image5: TImage;
    Label1: TLabel;
    procedure ButtonVoltarClick(Sender: TObject);
    procedure retorna_ao_menuClick(Sender: TObject);
    procedure Image5Click(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  FormPrestador: TForm4;

implementation

uses
  pg_home, paguina_servicos, paguina_perfil;

{$R *.dfm}



procedure TForm4.ButtonVoltarClick(Sender: TObject);
begin
  pag_home.MostrarFormularioEmbed(Form3); // volta para tela de perfil
end;

procedure TForm4.Image5Click(Sender: TObject);
var
  NovoIDPrestador: Integer;
begin
  if Trim(EditHabilidades.Text) = '' then
  begin
    ShowMessage('Digite suas habilidades.');
    Exit;
  end;

  if Trim(EditRegiao.Text) = '' then
  begin
    ShowMessage('Digite sua região.');
    Exit;
  end;

  try
    // Garante conexão
    if not DataModule2.FDConnection1.Connected then
      DataModule2.FDConnection1.Connected := True;

    // Gera novo id_prestador
    with DataModule2.FDQuery1 do
    begin
      Close;
      SQL.Text :=
        'SELECT COALESCE(MAX(id_prestador), 0) + 1 AS prox_id FROM prestador';
      Open;
      NovoIDPrestador := FieldByName('prox_id').AsInteger;
      Close;
    end;

    // Insere o novo prestador
    with DataModule2.FDQuery1 do
    begin
      Close;
      SQL.Text :=
        'INSERT INTO prestador (id_prestador, id_usuario, habilidades, regiao) '
        + 'VALUES (:id_prestador, :id_usuario, :habilidades, :regiao)';
      ParamByName('id_prestador').AsInteger := NovoIDPrestador;
      ParamByName('id_usuario').AsInteger := UsuarioLogadoID;
      ParamByName('habilidades').AsString := EditHabilidades.Text;
      ParamByName('regiao').AsString := EditRegiao.Text;
      ExecSQL;
    end;

    // Atualiza o tipo da conta no banco
    with DataModule2.FDQuery1 do
    begin
      Close;
      SQL.Text :=
        'UPDATE conta SET tipo = ''prestador'' WHERE id_usuario = :id';
      ParamByName('id').AsInteger := UsuarioLogadoID;
      ExecSQL;
    end;

    ShowMessage('Cadastro de prestador concluído com sucesso!');
    pag_home.MostrarFormularioEmbed(Form3); // volta para tela perfil

  except
    on E: Exception do
      ShowMessage('Erro ao salvar: ' + E.Message);
  end;
end;
procedure TForm4.retorna_ao_menuClick(Sender: TObject);
begin
  pag_home.MostrarFormularioEmbed(Form3); // volta para tela de perfil
end;

end.
